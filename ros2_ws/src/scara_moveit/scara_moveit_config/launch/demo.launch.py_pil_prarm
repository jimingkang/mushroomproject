from moveit_configs_utils import MoveItConfigsBuilder
from launch import LaunchDescription
from launch_ros.actions import Node
from ament_index_python.packages import get_package_share_directory
import os

def generate_launch_description():
    moveit_config = (
        MoveItConfigsBuilder("scara_description", package_name="scara_moveit_config")
        .robot_description(file_path="config/scara_description.urdf.xacro")
        .robot_description_semantic(file_path="config/scara_description.srdf")
        .trajectory_execution(file_path="config/moveit_controllers.yaml")
        .planning_pipelines(pipelines=["pilz_industrial_motion_planner"])
        .joint_limits(file_path="config/joint_limits.yaml")
        .to_moveit_configs()
    )

    pilz_limits_file = os.path.join(
        get_package_share_directory("scara_moveit_config"),
        "config",
        "pilz_cartesian_limits.yaml",
    )

    move_group_node = Node(
        package="moveit_ros_move_group",
        executable="move_group",
        output="screen",
        parameters=[
            moveit_config.to_dict(),
            pilz_limits_file  # ?? ??????
        ],
    )

    return LaunchDescription([
        move_group_node
    ])

